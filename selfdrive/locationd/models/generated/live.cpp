#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3650258586047302313) {
   out_3650258586047302313[0] = 0;
   out_3650258586047302313[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3650258586047302313[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3650258586047302313[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3650258586047302313[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3650258586047302313[5] = -sin(in_vec[1]);
   out_3650258586047302313[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3650258586047302313[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3650258586047302313[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3650258586047302313[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3650258586047302313[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3650258586047302313[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3650258586047302313[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3650258586047302313[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3650258586047302313[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3650258586047302313[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3650258586047302313[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3650258586047302313[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_319164860628708381) {
   out_319164860628708381[0] = delta_x[0] + nom_x[0];
   out_319164860628708381[1] = delta_x[1] + nom_x[1];
   out_319164860628708381[2] = delta_x[2] + nom_x[2];
   out_319164860628708381[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_319164860628708381[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_319164860628708381[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_319164860628708381[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_319164860628708381[7] = delta_x[6] + nom_x[7];
   out_319164860628708381[8] = delta_x[7] + nom_x[8];
   out_319164860628708381[9] = delta_x[8] + nom_x[9];
   out_319164860628708381[10] = delta_x[9] + nom_x[10];
   out_319164860628708381[11] = delta_x[10] + nom_x[11];
   out_319164860628708381[12] = delta_x[11] + nom_x[12];
   out_319164860628708381[13] = delta_x[12] + nom_x[13];
   out_319164860628708381[14] = delta_x[13] + nom_x[14];
   out_319164860628708381[15] = delta_x[14] + nom_x[15];
   out_319164860628708381[16] = delta_x[15] + nom_x[16];
   out_319164860628708381[17] = delta_x[16] + nom_x[17];
   out_319164860628708381[18] = delta_x[17] + nom_x[18];
   out_319164860628708381[19] = delta_x[18] + nom_x[19];
   out_319164860628708381[20] = delta_x[19] + nom_x[20];
   out_319164860628708381[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_61279048776004062) {
   out_61279048776004062[0] = -nom_x[0] + true_x[0];
   out_61279048776004062[1] = -nom_x[1] + true_x[1];
   out_61279048776004062[2] = -nom_x[2] + true_x[2];
   out_61279048776004062[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_61279048776004062[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_61279048776004062[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_61279048776004062[6] = -nom_x[7] + true_x[7];
   out_61279048776004062[7] = -nom_x[8] + true_x[8];
   out_61279048776004062[8] = -nom_x[9] + true_x[9];
   out_61279048776004062[9] = -nom_x[10] + true_x[10];
   out_61279048776004062[10] = -nom_x[11] + true_x[11];
   out_61279048776004062[11] = -nom_x[12] + true_x[12];
   out_61279048776004062[12] = -nom_x[13] + true_x[13];
   out_61279048776004062[13] = -nom_x[14] + true_x[14];
   out_61279048776004062[14] = -nom_x[15] + true_x[15];
   out_61279048776004062[15] = -nom_x[16] + true_x[16];
   out_61279048776004062[16] = -nom_x[17] + true_x[17];
   out_61279048776004062[17] = -nom_x[18] + true_x[18];
   out_61279048776004062[18] = -nom_x[19] + true_x[19];
   out_61279048776004062[19] = -nom_x[20] + true_x[20];
   out_61279048776004062[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8884535280500598173) {
   out_8884535280500598173[0] = 1.0;
   out_8884535280500598173[1] = 0;
   out_8884535280500598173[2] = 0;
   out_8884535280500598173[3] = 0;
   out_8884535280500598173[4] = 0;
   out_8884535280500598173[5] = 0;
   out_8884535280500598173[6] = 0;
   out_8884535280500598173[7] = 0;
   out_8884535280500598173[8] = 0;
   out_8884535280500598173[9] = 0;
   out_8884535280500598173[10] = 0;
   out_8884535280500598173[11] = 0;
   out_8884535280500598173[12] = 0;
   out_8884535280500598173[13] = 0;
   out_8884535280500598173[14] = 0;
   out_8884535280500598173[15] = 0;
   out_8884535280500598173[16] = 0;
   out_8884535280500598173[17] = 0;
   out_8884535280500598173[18] = 0;
   out_8884535280500598173[19] = 0;
   out_8884535280500598173[20] = 0;
   out_8884535280500598173[21] = 0;
   out_8884535280500598173[22] = 1.0;
   out_8884535280500598173[23] = 0;
   out_8884535280500598173[24] = 0;
   out_8884535280500598173[25] = 0;
   out_8884535280500598173[26] = 0;
   out_8884535280500598173[27] = 0;
   out_8884535280500598173[28] = 0;
   out_8884535280500598173[29] = 0;
   out_8884535280500598173[30] = 0;
   out_8884535280500598173[31] = 0;
   out_8884535280500598173[32] = 0;
   out_8884535280500598173[33] = 0;
   out_8884535280500598173[34] = 0;
   out_8884535280500598173[35] = 0;
   out_8884535280500598173[36] = 0;
   out_8884535280500598173[37] = 0;
   out_8884535280500598173[38] = 0;
   out_8884535280500598173[39] = 0;
   out_8884535280500598173[40] = 0;
   out_8884535280500598173[41] = 0;
   out_8884535280500598173[42] = 0;
   out_8884535280500598173[43] = 0;
   out_8884535280500598173[44] = 1.0;
   out_8884535280500598173[45] = 0;
   out_8884535280500598173[46] = 0;
   out_8884535280500598173[47] = 0;
   out_8884535280500598173[48] = 0;
   out_8884535280500598173[49] = 0;
   out_8884535280500598173[50] = 0;
   out_8884535280500598173[51] = 0;
   out_8884535280500598173[52] = 0;
   out_8884535280500598173[53] = 0;
   out_8884535280500598173[54] = 0;
   out_8884535280500598173[55] = 0;
   out_8884535280500598173[56] = 0;
   out_8884535280500598173[57] = 0;
   out_8884535280500598173[58] = 0;
   out_8884535280500598173[59] = 0;
   out_8884535280500598173[60] = 0;
   out_8884535280500598173[61] = 0;
   out_8884535280500598173[62] = 0;
   out_8884535280500598173[63] = 0;
   out_8884535280500598173[64] = 0;
   out_8884535280500598173[65] = 0;
   out_8884535280500598173[66] = -0.5*state[4];
   out_8884535280500598173[67] = -0.5*state[5];
   out_8884535280500598173[68] = -0.5*state[6];
   out_8884535280500598173[69] = 0;
   out_8884535280500598173[70] = 0;
   out_8884535280500598173[71] = 0;
   out_8884535280500598173[72] = 0;
   out_8884535280500598173[73] = 0;
   out_8884535280500598173[74] = 0;
   out_8884535280500598173[75] = 0;
   out_8884535280500598173[76] = 0;
   out_8884535280500598173[77] = 0;
   out_8884535280500598173[78] = 0;
   out_8884535280500598173[79] = 0;
   out_8884535280500598173[80] = 0;
   out_8884535280500598173[81] = 0;
   out_8884535280500598173[82] = 0;
   out_8884535280500598173[83] = 0;
   out_8884535280500598173[84] = 0;
   out_8884535280500598173[85] = 0;
   out_8884535280500598173[86] = 0;
   out_8884535280500598173[87] = 0.5*state[3];
   out_8884535280500598173[88] = 0.5*state[6];
   out_8884535280500598173[89] = -0.5*state[5];
   out_8884535280500598173[90] = 0;
   out_8884535280500598173[91] = 0;
   out_8884535280500598173[92] = 0;
   out_8884535280500598173[93] = 0;
   out_8884535280500598173[94] = 0;
   out_8884535280500598173[95] = 0;
   out_8884535280500598173[96] = 0;
   out_8884535280500598173[97] = 0;
   out_8884535280500598173[98] = 0;
   out_8884535280500598173[99] = 0;
   out_8884535280500598173[100] = 0;
   out_8884535280500598173[101] = 0;
   out_8884535280500598173[102] = 0;
   out_8884535280500598173[103] = 0;
   out_8884535280500598173[104] = 0;
   out_8884535280500598173[105] = 0;
   out_8884535280500598173[106] = 0;
   out_8884535280500598173[107] = 0;
   out_8884535280500598173[108] = -0.5*state[6];
   out_8884535280500598173[109] = 0.5*state[3];
   out_8884535280500598173[110] = 0.5*state[4];
   out_8884535280500598173[111] = 0;
   out_8884535280500598173[112] = 0;
   out_8884535280500598173[113] = 0;
   out_8884535280500598173[114] = 0;
   out_8884535280500598173[115] = 0;
   out_8884535280500598173[116] = 0;
   out_8884535280500598173[117] = 0;
   out_8884535280500598173[118] = 0;
   out_8884535280500598173[119] = 0;
   out_8884535280500598173[120] = 0;
   out_8884535280500598173[121] = 0;
   out_8884535280500598173[122] = 0;
   out_8884535280500598173[123] = 0;
   out_8884535280500598173[124] = 0;
   out_8884535280500598173[125] = 0;
   out_8884535280500598173[126] = 0;
   out_8884535280500598173[127] = 0;
   out_8884535280500598173[128] = 0;
   out_8884535280500598173[129] = 0.5*state[5];
   out_8884535280500598173[130] = -0.5*state[4];
   out_8884535280500598173[131] = 0.5*state[3];
   out_8884535280500598173[132] = 0;
   out_8884535280500598173[133] = 0;
   out_8884535280500598173[134] = 0;
   out_8884535280500598173[135] = 0;
   out_8884535280500598173[136] = 0;
   out_8884535280500598173[137] = 0;
   out_8884535280500598173[138] = 0;
   out_8884535280500598173[139] = 0;
   out_8884535280500598173[140] = 0;
   out_8884535280500598173[141] = 0;
   out_8884535280500598173[142] = 0;
   out_8884535280500598173[143] = 0;
   out_8884535280500598173[144] = 0;
   out_8884535280500598173[145] = 0;
   out_8884535280500598173[146] = 0;
   out_8884535280500598173[147] = 0;
   out_8884535280500598173[148] = 0;
   out_8884535280500598173[149] = 0;
   out_8884535280500598173[150] = 0;
   out_8884535280500598173[151] = 0;
   out_8884535280500598173[152] = 0;
   out_8884535280500598173[153] = 1.0;
   out_8884535280500598173[154] = 0;
   out_8884535280500598173[155] = 0;
   out_8884535280500598173[156] = 0;
   out_8884535280500598173[157] = 0;
   out_8884535280500598173[158] = 0;
   out_8884535280500598173[159] = 0;
   out_8884535280500598173[160] = 0;
   out_8884535280500598173[161] = 0;
   out_8884535280500598173[162] = 0;
   out_8884535280500598173[163] = 0;
   out_8884535280500598173[164] = 0;
   out_8884535280500598173[165] = 0;
   out_8884535280500598173[166] = 0;
   out_8884535280500598173[167] = 0;
   out_8884535280500598173[168] = 0;
   out_8884535280500598173[169] = 0;
   out_8884535280500598173[170] = 0;
   out_8884535280500598173[171] = 0;
   out_8884535280500598173[172] = 0;
   out_8884535280500598173[173] = 0;
   out_8884535280500598173[174] = 0;
   out_8884535280500598173[175] = 1.0;
   out_8884535280500598173[176] = 0;
   out_8884535280500598173[177] = 0;
   out_8884535280500598173[178] = 0;
   out_8884535280500598173[179] = 0;
   out_8884535280500598173[180] = 0;
   out_8884535280500598173[181] = 0;
   out_8884535280500598173[182] = 0;
   out_8884535280500598173[183] = 0;
   out_8884535280500598173[184] = 0;
   out_8884535280500598173[185] = 0;
   out_8884535280500598173[186] = 0;
   out_8884535280500598173[187] = 0;
   out_8884535280500598173[188] = 0;
   out_8884535280500598173[189] = 0;
   out_8884535280500598173[190] = 0;
   out_8884535280500598173[191] = 0;
   out_8884535280500598173[192] = 0;
   out_8884535280500598173[193] = 0;
   out_8884535280500598173[194] = 0;
   out_8884535280500598173[195] = 0;
   out_8884535280500598173[196] = 0;
   out_8884535280500598173[197] = 1.0;
   out_8884535280500598173[198] = 0;
   out_8884535280500598173[199] = 0;
   out_8884535280500598173[200] = 0;
   out_8884535280500598173[201] = 0;
   out_8884535280500598173[202] = 0;
   out_8884535280500598173[203] = 0;
   out_8884535280500598173[204] = 0;
   out_8884535280500598173[205] = 0;
   out_8884535280500598173[206] = 0;
   out_8884535280500598173[207] = 0;
   out_8884535280500598173[208] = 0;
   out_8884535280500598173[209] = 0;
   out_8884535280500598173[210] = 0;
   out_8884535280500598173[211] = 0;
   out_8884535280500598173[212] = 0;
   out_8884535280500598173[213] = 0;
   out_8884535280500598173[214] = 0;
   out_8884535280500598173[215] = 0;
   out_8884535280500598173[216] = 0;
   out_8884535280500598173[217] = 0;
   out_8884535280500598173[218] = 0;
   out_8884535280500598173[219] = 1.0;
   out_8884535280500598173[220] = 0;
   out_8884535280500598173[221] = 0;
   out_8884535280500598173[222] = 0;
   out_8884535280500598173[223] = 0;
   out_8884535280500598173[224] = 0;
   out_8884535280500598173[225] = 0;
   out_8884535280500598173[226] = 0;
   out_8884535280500598173[227] = 0;
   out_8884535280500598173[228] = 0;
   out_8884535280500598173[229] = 0;
   out_8884535280500598173[230] = 0;
   out_8884535280500598173[231] = 0;
   out_8884535280500598173[232] = 0;
   out_8884535280500598173[233] = 0;
   out_8884535280500598173[234] = 0;
   out_8884535280500598173[235] = 0;
   out_8884535280500598173[236] = 0;
   out_8884535280500598173[237] = 0;
   out_8884535280500598173[238] = 0;
   out_8884535280500598173[239] = 0;
   out_8884535280500598173[240] = 0;
   out_8884535280500598173[241] = 1.0;
   out_8884535280500598173[242] = 0;
   out_8884535280500598173[243] = 0;
   out_8884535280500598173[244] = 0;
   out_8884535280500598173[245] = 0;
   out_8884535280500598173[246] = 0;
   out_8884535280500598173[247] = 0;
   out_8884535280500598173[248] = 0;
   out_8884535280500598173[249] = 0;
   out_8884535280500598173[250] = 0;
   out_8884535280500598173[251] = 0;
   out_8884535280500598173[252] = 0;
   out_8884535280500598173[253] = 0;
   out_8884535280500598173[254] = 0;
   out_8884535280500598173[255] = 0;
   out_8884535280500598173[256] = 0;
   out_8884535280500598173[257] = 0;
   out_8884535280500598173[258] = 0;
   out_8884535280500598173[259] = 0;
   out_8884535280500598173[260] = 0;
   out_8884535280500598173[261] = 0;
   out_8884535280500598173[262] = 0;
   out_8884535280500598173[263] = 1.0;
   out_8884535280500598173[264] = 0;
   out_8884535280500598173[265] = 0;
   out_8884535280500598173[266] = 0;
   out_8884535280500598173[267] = 0;
   out_8884535280500598173[268] = 0;
   out_8884535280500598173[269] = 0;
   out_8884535280500598173[270] = 0;
   out_8884535280500598173[271] = 0;
   out_8884535280500598173[272] = 0;
   out_8884535280500598173[273] = 0;
   out_8884535280500598173[274] = 0;
   out_8884535280500598173[275] = 0;
   out_8884535280500598173[276] = 0;
   out_8884535280500598173[277] = 0;
   out_8884535280500598173[278] = 0;
   out_8884535280500598173[279] = 0;
   out_8884535280500598173[280] = 0;
   out_8884535280500598173[281] = 0;
   out_8884535280500598173[282] = 0;
   out_8884535280500598173[283] = 0;
   out_8884535280500598173[284] = 0;
   out_8884535280500598173[285] = 1.0;
   out_8884535280500598173[286] = 0;
   out_8884535280500598173[287] = 0;
   out_8884535280500598173[288] = 0;
   out_8884535280500598173[289] = 0;
   out_8884535280500598173[290] = 0;
   out_8884535280500598173[291] = 0;
   out_8884535280500598173[292] = 0;
   out_8884535280500598173[293] = 0;
   out_8884535280500598173[294] = 0;
   out_8884535280500598173[295] = 0;
   out_8884535280500598173[296] = 0;
   out_8884535280500598173[297] = 0;
   out_8884535280500598173[298] = 0;
   out_8884535280500598173[299] = 0;
   out_8884535280500598173[300] = 0;
   out_8884535280500598173[301] = 0;
   out_8884535280500598173[302] = 0;
   out_8884535280500598173[303] = 0;
   out_8884535280500598173[304] = 0;
   out_8884535280500598173[305] = 0;
   out_8884535280500598173[306] = 0;
   out_8884535280500598173[307] = 1.0;
   out_8884535280500598173[308] = 0;
   out_8884535280500598173[309] = 0;
   out_8884535280500598173[310] = 0;
   out_8884535280500598173[311] = 0;
   out_8884535280500598173[312] = 0;
   out_8884535280500598173[313] = 0;
   out_8884535280500598173[314] = 0;
   out_8884535280500598173[315] = 0;
   out_8884535280500598173[316] = 0;
   out_8884535280500598173[317] = 0;
   out_8884535280500598173[318] = 0;
   out_8884535280500598173[319] = 0;
   out_8884535280500598173[320] = 0;
   out_8884535280500598173[321] = 0;
   out_8884535280500598173[322] = 0;
   out_8884535280500598173[323] = 0;
   out_8884535280500598173[324] = 0;
   out_8884535280500598173[325] = 0;
   out_8884535280500598173[326] = 0;
   out_8884535280500598173[327] = 0;
   out_8884535280500598173[328] = 0;
   out_8884535280500598173[329] = 1.0;
   out_8884535280500598173[330] = 0;
   out_8884535280500598173[331] = 0;
   out_8884535280500598173[332] = 0;
   out_8884535280500598173[333] = 0;
   out_8884535280500598173[334] = 0;
   out_8884535280500598173[335] = 0;
   out_8884535280500598173[336] = 0;
   out_8884535280500598173[337] = 0;
   out_8884535280500598173[338] = 0;
   out_8884535280500598173[339] = 0;
   out_8884535280500598173[340] = 0;
   out_8884535280500598173[341] = 0;
   out_8884535280500598173[342] = 0;
   out_8884535280500598173[343] = 0;
   out_8884535280500598173[344] = 0;
   out_8884535280500598173[345] = 0;
   out_8884535280500598173[346] = 0;
   out_8884535280500598173[347] = 0;
   out_8884535280500598173[348] = 0;
   out_8884535280500598173[349] = 0;
   out_8884535280500598173[350] = 0;
   out_8884535280500598173[351] = 1.0;
   out_8884535280500598173[352] = 0;
   out_8884535280500598173[353] = 0;
   out_8884535280500598173[354] = 0;
   out_8884535280500598173[355] = 0;
   out_8884535280500598173[356] = 0;
   out_8884535280500598173[357] = 0;
   out_8884535280500598173[358] = 0;
   out_8884535280500598173[359] = 0;
   out_8884535280500598173[360] = 0;
   out_8884535280500598173[361] = 0;
   out_8884535280500598173[362] = 0;
   out_8884535280500598173[363] = 0;
   out_8884535280500598173[364] = 0;
   out_8884535280500598173[365] = 0;
   out_8884535280500598173[366] = 0;
   out_8884535280500598173[367] = 0;
   out_8884535280500598173[368] = 0;
   out_8884535280500598173[369] = 0;
   out_8884535280500598173[370] = 0;
   out_8884535280500598173[371] = 0;
   out_8884535280500598173[372] = 0;
   out_8884535280500598173[373] = 1.0;
   out_8884535280500598173[374] = 0;
   out_8884535280500598173[375] = 0;
   out_8884535280500598173[376] = 0;
   out_8884535280500598173[377] = 0;
   out_8884535280500598173[378] = 0;
   out_8884535280500598173[379] = 0;
   out_8884535280500598173[380] = 0;
   out_8884535280500598173[381] = 0;
   out_8884535280500598173[382] = 0;
   out_8884535280500598173[383] = 0;
   out_8884535280500598173[384] = 0;
   out_8884535280500598173[385] = 0;
   out_8884535280500598173[386] = 0;
   out_8884535280500598173[387] = 0;
   out_8884535280500598173[388] = 0;
   out_8884535280500598173[389] = 0;
   out_8884535280500598173[390] = 0;
   out_8884535280500598173[391] = 0;
   out_8884535280500598173[392] = 0;
   out_8884535280500598173[393] = 0;
   out_8884535280500598173[394] = 0;
   out_8884535280500598173[395] = 1.0;
   out_8884535280500598173[396] = 0;
   out_8884535280500598173[397] = 0;
   out_8884535280500598173[398] = 0;
   out_8884535280500598173[399] = 0;
   out_8884535280500598173[400] = 0;
   out_8884535280500598173[401] = 0;
   out_8884535280500598173[402] = 0;
   out_8884535280500598173[403] = 0;
   out_8884535280500598173[404] = 0;
   out_8884535280500598173[405] = 0;
   out_8884535280500598173[406] = 0;
   out_8884535280500598173[407] = 0;
   out_8884535280500598173[408] = 0;
   out_8884535280500598173[409] = 0;
   out_8884535280500598173[410] = 0;
   out_8884535280500598173[411] = 0;
   out_8884535280500598173[412] = 0;
   out_8884535280500598173[413] = 0;
   out_8884535280500598173[414] = 0;
   out_8884535280500598173[415] = 0;
   out_8884535280500598173[416] = 0;
   out_8884535280500598173[417] = 1.0;
   out_8884535280500598173[418] = 0;
   out_8884535280500598173[419] = 0;
   out_8884535280500598173[420] = 0;
   out_8884535280500598173[421] = 0;
   out_8884535280500598173[422] = 0;
   out_8884535280500598173[423] = 0;
   out_8884535280500598173[424] = 0;
   out_8884535280500598173[425] = 0;
   out_8884535280500598173[426] = 0;
   out_8884535280500598173[427] = 0;
   out_8884535280500598173[428] = 0;
   out_8884535280500598173[429] = 0;
   out_8884535280500598173[430] = 0;
   out_8884535280500598173[431] = 0;
   out_8884535280500598173[432] = 0;
   out_8884535280500598173[433] = 0;
   out_8884535280500598173[434] = 0;
   out_8884535280500598173[435] = 0;
   out_8884535280500598173[436] = 0;
   out_8884535280500598173[437] = 0;
   out_8884535280500598173[438] = 0;
   out_8884535280500598173[439] = 1.0;
   out_8884535280500598173[440] = 0;
   out_8884535280500598173[441] = 0;
   out_8884535280500598173[442] = 0;
   out_8884535280500598173[443] = 0;
   out_8884535280500598173[444] = 0;
   out_8884535280500598173[445] = 0;
   out_8884535280500598173[446] = 0;
   out_8884535280500598173[447] = 0;
   out_8884535280500598173[448] = 0;
   out_8884535280500598173[449] = 0;
   out_8884535280500598173[450] = 0;
   out_8884535280500598173[451] = 0;
   out_8884535280500598173[452] = 0;
   out_8884535280500598173[453] = 0;
   out_8884535280500598173[454] = 0;
   out_8884535280500598173[455] = 0;
   out_8884535280500598173[456] = 0;
   out_8884535280500598173[457] = 0;
   out_8884535280500598173[458] = 0;
   out_8884535280500598173[459] = 0;
   out_8884535280500598173[460] = 0;
   out_8884535280500598173[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1529620457729649381) {
   out_1529620457729649381[0] = dt*state[7] + state[0];
   out_1529620457729649381[1] = dt*state[8] + state[1];
   out_1529620457729649381[2] = dt*state[9] + state[2];
   out_1529620457729649381[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1529620457729649381[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1529620457729649381[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1529620457729649381[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1529620457729649381[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1529620457729649381[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1529620457729649381[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1529620457729649381[10] = state[10];
   out_1529620457729649381[11] = state[11];
   out_1529620457729649381[12] = state[12];
   out_1529620457729649381[13] = state[13];
   out_1529620457729649381[14] = state[14];
   out_1529620457729649381[15] = state[15];
   out_1529620457729649381[16] = state[16];
   out_1529620457729649381[17] = state[17];
   out_1529620457729649381[18] = state[18];
   out_1529620457729649381[19] = state[19];
   out_1529620457729649381[20] = state[20];
   out_1529620457729649381[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1152118045946151049) {
   out_1152118045946151049[0] = 1;
   out_1152118045946151049[1] = 0;
   out_1152118045946151049[2] = 0;
   out_1152118045946151049[3] = 0;
   out_1152118045946151049[4] = 0;
   out_1152118045946151049[5] = 0;
   out_1152118045946151049[6] = dt;
   out_1152118045946151049[7] = 0;
   out_1152118045946151049[8] = 0;
   out_1152118045946151049[9] = 0;
   out_1152118045946151049[10] = 0;
   out_1152118045946151049[11] = 0;
   out_1152118045946151049[12] = 0;
   out_1152118045946151049[13] = 0;
   out_1152118045946151049[14] = 0;
   out_1152118045946151049[15] = 0;
   out_1152118045946151049[16] = 0;
   out_1152118045946151049[17] = 0;
   out_1152118045946151049[18] = 0;
   out_1152118045946151049[19] = 0;
   out_1152118045946151049[20] = 0;
   out_1152118045946151049[21] = 0;
   out_1152118045946151049[22] = 1;
   out_1152118045946151049[23] = 0;
   out_1152118045946151049[24] = 0;
   out_1152118045946151049[25] = 0;
   out_1152118045946151049[26] = 0;
   out_1152118045946151049[27] = 0;
   out_1152118045946151049[28] = dt;
   out_1152118045946151049[29] = 0;
   out_1152118045946151049[30] = 0;
   out_1152118045946151049[31] = 0;
   out_1152118045946151049[32] = 0;
   out_1152118045946151049[33] = 0;
   out_1152118045946151049[34] = 0;
   out_1152118045946151049[35] = 0;
   out_1152118045946151049[36] = 0;
   out_1152118045946151049[37] = 0;
   out_1152118045946151049[38] = 0;
   out_1152118045946151049[39] = 0;
   out_1152118045946151049[40] = 0;
   out_1152118045946151049[41] = 0;
   out_1152118045946151049[42] = 0;
   out_1152118045946151049[43] = 0;
   out_1152118045946151049[44] = 1;
   out_1152118045946151049[45] = 0;
   out_1152118045946151049[46] = 0;
   out_1152118045946151049[47] = 0;
   out_1152118045946151049[48] = 0;
   out_1152118045946151049[49] = 0;
   out_1152118045946151049[50] = dt;
   out_1152118045946151049[51] = 0;
   out_1152118045946151049[52] = 0;
   out_1152118045946151049[53] = 0;
   out_1152118045946151049[54] = 0;
   out_1152118045946151049[55] = 0;
   out_1152118045946151049[56] = 0;
   out_1152118045946151049[57] = 0;
   out_1152118045946151049[58] = 0;
   out_1152118045946151049[59] = 0;
   out_1152118045946151049[60] = 0;
   out_1152118045946151049[61] = 0;
   out_1152118045946151049[62] = 0;
   out_1152118045946151049[63] = 0;
   out_1152118045946151049[64] = 0;
   out_1152118045946151049[65] = 0;
   out_1152118045946151049[66] = 1;
   out_1152118045946151049[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1152118045946151049[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1152118045946151049[69] = 0;
   out_1152118045946151049[70] = 0;
   out_1152118045946151049[71] = 0;
   out_1152118045946151049[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1152118045946151049[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1152118045946151049[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1152118045946151049[75] = 0;
   out_1152118045946151049[76] = 0;
   out_1152118045946151049[77] = 0;
   out_1152118045946151049[78] = 0;
   out_1152118045946151049[79] = 0;
   out_1152118045946151049[80] = 0;
   out_1152118045946151049[81] = 0;
   out_1152118045946151049[82] = 0;
   out_1152118045946151049[83] = 0;
   out_1152118045946151049[84] = 0;
   out_1152118045946151049[85] = 0;
   out_1152118045946151049[86] = 0;
   out_1152118045946151049[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1152118045946151049[88] = 1;
   out_1152118045946151049[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1152118045946151049[90] = 0;
   out_1152118045946151049[91] = 0;
   out_1152118045946151049[92] = 0;
   out_1152118045946151049[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1152118045946151049[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1152118045946151049[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1152118045946151049[96] = 0;
   out_1152118045946151049[97] = 0;
   out_1152118045946151049[98] = 0;
   out_1152118045946151049[99] = 0;
   out_1152118045946151049[100] = 0;
   out_1152118045946151049[101] = 0;
   out_1152118045946151049[102] = 0;
   out_1152118045946151049[103] = 0;
   out_1152118045946151049[104] = 0;
   out_1152118045946151049[105] = 0;
   out_1152118045946151049[106] = 0;
   out_1152118045946151049[107] = 0;
   out_1152118045946151049[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1152118045946151049[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1152118045946151049[110] = 1;
   out_1152118045946151049[111] = 0;
   out_1152118045946151049[112] = 0;
   out_1152118045946151049[113] = 0;
   out_1152118045946151049[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1152118045946151049[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1152118045946151049[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1152118045946151049[117] = 0;
   out_1152118045946151049[118] = 0;
   out_1152118045946151049[119] = 0;
   out_1152118045946151049[120] = 0;
   out_1152118045946151049[121] = 0;
   out_1152118045946151049[122] = 0;
   out_1152118045946151049[123] = 0;
   out_1152118045946151049[124] = 0;
   out_1152118045946151049[125] = 0;
   out_1152118045946151049[126] = 0;
   out_1152118045946151049[127] = 0;
   out_1152118045946151049[128] = 0;
   out_1152118045946151049[129] = 0;
   out_1152118045946151049[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1152118045946151049[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1152118045946151049[132] = 1;
   out_1152118045946151049[133] = 0;
   out_1152118045946151049[134] = 0;
   out_1152118045946151049[135] = 0;
   out_1152118045946151049[136] = 0;
   out_1152118045946151049[137] = 0;
   out_1152118045946151049[138] = 0;
   out_1152118045946151049[139] = 0;
   out_1152118045946151049[140] = 0;
   out_1152118045946151049[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1152118045946151049[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1152118045946151049[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1152118045946151049[144] = 0;
   out_1152118045946151049[145] = 0;
   out_1152118045946151049[146] = 0;
   out_1152118045946151049[147] = 0;
   out_1152118045946151049[148] = 0;
   out_1152118045946151049[149] = 0;
   out_1152118045946151049[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1152118045946151049[151] = 0;
   out_1152118045946151049[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1152118045946151049[153] = 0;
   out_1152118045946151049[154] = 1;
   out_1152118045946151049[155] = 0;
   out_1152118045946151049[156] = 0;
   out_1152118045946151049[157] = 0;
   out_1152118045946151049[158] = 0;
   out_1152118045946151049[159] = 0;
   out_1152118045946151049[160] = 0;
   out_1152118045946151049[161] = 0;
   out_1152118045946151049[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1152118045946151049[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1152118045946151049[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1152118045946151049[165] = 0;
   out_1152118045946151049[166] = 0;
   out_1152118045946151049[167] = 0;
   out_1152118045946151049[168] = 0;
   out_1152118045946151049[169] = 0;
   out_1152118045946151049[170] = 0;
   out_1152118045946151049[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1152118045946151049[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1152118045946151049[173] = 0;
   out_1152118045946151049[174] = 0;
   out_1152118045946151049[175] = 0;
   out_1152118045946151049[176] = 1;
   out_1152118045946151049[177] = 0;
   out_1152118045946151049[178] = 0;
   out_1152118045946151049[179] = 0;
   out_1152118045946151049[180] = 0;
   out_1152118045946151049[181] = 0;
   out_1152118045946151049[182] = 0;
   out_1152118045946151049[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1152118045946151049[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1152118045946151049[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1152118045946151049[186] = 0;
   out_1152118045946151049[187] = 0;
   out_1152118045946151049[188] = 0;
   out_1152118045946151049[189] = 0;
   out_1152118045946151049[190] = 0;
   out_1152118045946151049[191] = 0;
   out_1152118045946151049[192] = 0;
   out_1152118045946151049[193] = 0;
   out_1152118045946151049[194] = 0;
   out_1152118045946151049[195] = 0;
   out_1152118045946151049[196] = 0;
   out_1152118045946151049[197] = 0;
   out_1152118045946151049[198] = 1;
   out_1152118045946151049[199] = 0;
   out_1152118045946151049[200] = 0;
   out_1152118045946151049[201] = 0;
   out_1152118045946151049[202] = 0;
   out_1152118045946151049[203] = 0;
   out_1152118045946151049[204] = 0;
   out_1152118045946151049[205] = 0;
   out_1152118045946151049[206] = 0;
   out_1152118045946151049[207] = 0;
   out_1152118045946151049[208] = 0;
   out_1152118045946151049[209] = 0;
   out_1152118045946151049[210] = 0;
   out_1152118045946151049[211] = 0;
   out_1152118045946151049[212] = 0;
   out_1152118045946151049[213] = 0;
   out_1152118045946151049[214] = 0;
   out_1152118045946151049[215] = 0;
   out_1152118045946151049[216] = 0;
   out_1152118045946151049[217] = 0;
   out_1152118045946151049[218] = 0;
   out_1152118045946151049[219] = 0;
   out_1152118045946151049[220] = 1;
   out_1152118045946151049[221] = 0;
   out_1152118045946151049[222] = 0;
   out_1152118045946151049[223] = 0;
   out_1152118045946151049[224] = 0;
   out_1152118045946151049[225] = 0;
   out_1152118045946151049[226] = 0;
   out_1152118045946151049[227] = 0;
   out_1152118045946151049[228] = 0;
   out_1152118045946151049[229] = 0;
   out_1152118045946151049[230] = 0;
   out_1152118045946151049[231] = 0;
   out_1152118045946151049[232] = 0;
   out_1152118045946151049[233] = 0;
   out_1152118045946151049[234] = 0;
   out_1152118045946151049[235] = 0;
   out_1152118045946151049[236] = 0;
   out_1152118045946151049[237] = 0;
   out_1152118045946151049[238] = 0;
   out_1152118045946151049[239] = 0;
   out_1152118045946151049[240] = 0;
   out_1152118045946151049[241] = 0;
   out_1152118045946151049[242] = 1;
   out_1152118045946151049[243] = 0;
   out_1152118045946151049[244] = 0;
   out_1152118045946151049[245] = 0;
   out_1152118045946151049[246] = 0;
   out_1152118045946151049[247] = 0;
   out_1152118045946151049[248] = 0;
   out_1152118045946151049[249] = 0;
   out_1152118045946151049[250] = 0;
   out_1152118045946151049[251] = 0;
   out_1152118045946151049[252] = 0;
   out_1152118045946151049[253] = 0;
   out_1152118045946151049[254] = 0;
   out_1152118045946151049[255] = 0;
   out_1152118045946151049[256] = 0;
   out_1152118045946151049[257] = 0;
   out_1152118045946151049[258] = 0;
   out_1152118045946151049[259] = 0;
   out_1152118045946151049[260] = 0;
   out_1152118045946151049[261] = 0;
   out_1152118045946151049[262] = 0;
   out_1152118045946151049[263] = 0;
   out_1152118045946151049[264] = 1;
   out_1152118045946151049[265] = 0;
   out_1152118045946151049[266] = 0;
   out_1152118045946151049[267] = 0;
   out_1152118045946151049[268] = 0;
   out_1152118045946151049[269] = 0;
   out_1152118045946151049[270] = 0;
   out_1152118045946151049[271] = 0;
   out_1152118045946151049[272] = 0;
   out_1152118045946151049[273] = 0;
   out_1152118045946151049[274] = 0;
   out_1152118045946151049[275] = 0;
   out_1152118045946151049[276] = 0;
   out_1152118045946151049[277] = 0;
   out_1152118045946151049[278] = 0;
   out_1152118045946151049[279] = 0;
   out_1152118045946151049[280] = 0;
   out_1152118045946151049[281] = 0;
   out_1152118045946151049[282] = 0;
   out_1152118045946151049[283] = 0;
   out_1152118045946151049[284] = 0;
   out_1152118045946151049[285] = 0;
   out_1152118045946151049[286] = 1;
   out_1152118045946151049[287] = 0;
   out_1152118045946151049[288] = 0;
   out_1152118045946151049[289] = 0;
   out_1152118045946151049[290] = 0;
   out_1152118045946151049[291] = 0;
   out_1152118045946151049[292] = 0;
   out_1152118045946151049[293] = 0;
   out_1152118045946151049[294] = 0;
   out_1152118045946151049[295] = 0;
   out_1152118045946151049[296] = 0;
   out_1152118045946151049[297] = 0;
   out_1152118045946151049[298] = 0;
   out_1152118045946151049[299] = 0;
   out_1152118045946151049[300] = 0;
   out_1152118045946151049[301] = 0;
   out_1152118045946151049[302] = 0;
   out_1152118045946151049[303] = 0;
   out_1152118045946151049[304] = 0;
   out_1152118045946151049[305] = 0;
   out_1152118045946151049[306] = 0;
   out_1152118045946151049[307] = 0;
   out_1152118045946151049[308] = 1;
   out_1152118045946151049[309] = 0;
   out_1152118045946151049[310] = 0;
   out_1152118045946151049[311] = 0;
   out_1152118045946151049[312] = 0;
   out_1152118045946151049[313] = 0;
   out_1152118045946151049[314] = 0;
   out_1152118045946151049[315] = 0;
   out_1152118045946151049[316] = 0;
   out_1152118045946151049[317] = 0;
   out_1152118045946151049[318] = 0;
   out_1152118045946151049[319] = 0;
   out_1152118045946151049[320] = 0;
   out_1152118045946151049[321] = 0;
   out_1152118045946151049[322] = 0;
   out_1152118045946151049[323] = 0;
   out_1152118045946151049[324] = 0;
   out_1152118045946151049[325] = 0;
   out_1152118045946151049[326] = 0;
   out_1152118045946151049[327] = 0;
   out_1152118045946151049[328] = 0;
   out_1152118045946151049[329] = 0;
   out_1152118045946151049[330] = 1;
   out_1152118045946151049[331] = 0;
   out_1152118045946151049[332] = 0;
   out_1152118045946151049[333] = 0;
   out_1152118045946151049[334] = 0;
   out_1152118045946151049[335] = 0;
   out_1152118045946151049[336] = 0;
   out_1152118045946151049[337] = 0;
   out_1152118045946151049[338] = 0;
   out_1152118045946151049[339] = 0;
   out_1152118045946151049[340] = 0;
   out_1152118045946151049[341] = 0;
   out_1152118045946151049[342] = 0;
   out_1152118045946151049[343] = 0;
   out_1152118045946151049[344] = 0;
   out_1152118045946151049[345] = 0;
   out_1152118045946151049[346] = 0;
   out_1152118045946151049[347] = 0;
   out_1152118045946151049[348] = 0;
   out_1152118045946151049[349] = 0;
   out_1152118045946151049[350] = 0;
   out_1152118045946151049[351] = 0;
   out_1152118045946151049[352] = 1;
   out_1152118045946151049[353] = 0;
   out_1152118045946151049[354] = 0;
   out_1152118045946151049[355] = 0;
   out_1152118045946151049[356] = 0;
   out_1152118045946151049[357] = 0;
   out_1152118045946151049[358] = 0;
   out_1152118045946151049[359] = 0;
   out_1152118045946151049[360] = 0;
   out_1152118045946151049[361] = 0;
   out_1152118045946151049[362] = 0;
   out_1152118045946151049[363] = 0;
   out_1152118045946151049[364] = 0;
   out_1152118045946151049[365] = 0;
   out_1152118045946151049[366] = 0;
   out_1152118045946151049[367] = 0;
   out_1152118045946151049[368] = 0;
   out_1152118045946151049[369] = 0;
   out_1152118045946151049[370] = 0;
   out_1152118045946151049[371] = 0;
   out_1152118045946151049[372] = 0;
   out_1152118045946151049[373] = 0;
   out_1152118045946151049[374] = 1;
   out_1152118045946151049[375] = 0;
   out_1152118045946151049[376] = 0;
   out_1152118045946151049[377] = 0;
   out_1152118045946151049[378] = 0;
   out_1152118045946151049[379] = 0;
   out_1152118045946151049[380] = 0;
   out_1152118045946151049[381] = 0;
   out_1152118045946151049[382] = 0;
   out_1152118045946151049[383] = 0;
   out_1152118045946151049[384] = 0;
   out_1152118045946151049[385] = 0;
   out_1152118045946151049[386] = 0;
   out_1152118045946151049[387] = 0;
   out_1152118045946151049[388] = 0;
   out_1152118045946151049[389] = 0;
   out_1152118045946151049[390] = 0;
   out_1152118045946151049[391] = 0;
   out_1152118045946151049[392] = 0;
   out_1152118045946151049[393] = 0;
   out_1152118045946151049[394] = 0;
   out_1152118045946151049[395] = 0;
   out_1152118045946151049[396] = 1;
   out_1152118045946151049[397] = 0;
   out_1152118045946151049[398] = 0;
   out_1152118045946151049[399] = 0;
   out_1152118045946151049[400] = 0;
   out_1152118045946151049[401] = 0;
   out_1152118045946151049[402] = 0;
   out_1152118045946151049[403] = 0;
   out_1152118045946151049[404] = 0;
   out_1152118045946151049[405] = 0;
   out_1152118045946151049[406] = 0;
   out_1152118045946151049[407] = 0;
   out_1152118045946151049[408] = 0;
   out_1152118045946151049[409] = 0;
   out_1152118045946151049[410] = 0;
   out_1152118045946151049[411] = 0;
   out_1152118045946151049[412] = 0;
   out_1152118045946151049[413] = 0;
   out_1152118045946151049[414] = 0;
   out_1152118045946151049[415] = 0;
   out_1152118045946151049[416] = 0;
   out_1152118045946151049[417] = 0;
   out_1152118045946151049[418] = 1;
   out_1152118045946151049[419] = 0;
   out_1152118045946151049[420] = 0;
   out_1152118045946151049[421] = 0;
   out_1152118045946151049[422] = 0;
   out_1152118045946151049[423] = 0;
   out_1152118045946151049[424] = 0;
   out_1152118045946151049[425] = 0;
   out_1152118045946151049[426] = 0;
   out_1152118045946151049[427] = 0;
   out_1152118045946151049[428] = 0;
   out_1152118045946151049[429] = 0;
   out_1152118045946151049[430] = 0;
   out_1152118045946151049[431] = 0;
   out_1152118045946151049[432] = 0;
   out_1152118045946151049[433] = 0;
   out_1152118045946151049[434] = 0;
   out_1152118045946151049[435] = 0;
   out_1152118045946151049[436] = 0;
   out_1152118045946151049[437] = 0;
   out_1152118045946151049[438] = 0;
   out_1152118045946151049[439] = 0;
   out_1152118045946151049[440] = 1;
}
void h_4(double *state, double *unused, double *out_1481217230938872647) {
   out_1481217230938872647[0] = state[10] + state[13];
   out_1481217230938872647[1] = state[11] + state[14];
   out_1481217230938872647[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8962114299087111796) {
   out_8962114299087111796[0] = 0;
   out_8962114299087111796[1] = 0;
   out_8962114299087111796[2] = 0;
   out_8962114299087111796[3] = 0;
   out_8962114299087111796[4] = 0;
   out_8962114299087111796[5] = 0;
   out_8962114299087111796[6] = 0;
   out_8962114299087111796[7] = 0;
   out_8962114299087111796[8] = 0;
   out_8962114299087111796[9] = 0;
   out_8962114299087111796[10] = 1;
   out_8962114299087111796[11] = 0;
   out_8962114299087111796[12] = 0;
   out_8962114299087111796[13] = 1;
   out_8962114299087111796[14] = 0;
   out_8962114299087111796[15] = 0;
   out_8962114299087111796[16] = 0;
   out_8962114299087111796[17] = 0;
   out_8962114299087111796[18] = 0;
   out_8962114299087111796[19] = 0;
   out_8962114299087111796[20] = 0;
   out_8962114299087111796[21] = 0;
   out_8962114299087111796[22] = 0;
   out_8962114299087111796[23] = 0;
   out_8962114299087111796[24] = 0;
   out_8962114299087111796[25] = 0;
   out_8962114299087111796[26] = 0;
   out_8962114299087111796[27] = 0;
   out_8962114299087111796[28] = 0;
   out_8962114299087111796[29] = 0;
   out_8962114299087111796[30] = 0;
   out_8962114299087111796[31] = 0;
   out_8962114299087111796[32] = 0;
   out_8962114299087111796[33] = 1;
   out_8962114299087111796[34] = 0;
   out_8962114299087111796[35] = 0;
   out_8962114299087111796[36] = 1;
   out_8962114299087111796[37] = 0;
   out_8962114299087111796[38] = 0;
   out_8962114299087111796[39] = 0;
   out_8962114299087111796[40] = 0;
   out_8962114299087111796[41] = 0;
   out_8962114299087111796[42] = 0;
   out_8962114299087111796[43] = 0;
   out_8962114299087111796[44] = 0;
   out_8962114299087111796[45] = 0;
   out_8962114299087111796[46] = 0;
   out_8962114299087111796[47] = 0;
   out_8962114299087111796[48] = 0;
   out_8962114299087111796[49] = 0;
   out_8962114299087111796[50] = 0;
   out_8962114299087111796[51] = 0;
   out_8962114299087111796[52] = 0;
   out_8962114299087111796[53] = 0;
   out_8962114299087111796[54] = 0;
   out_8962114299087111796[55] = 0;
   out_8962114299087111796[56] = 1;
   out_8962114299087111796[57] = 0;
   out_8962114299087111796[58] = 0;
   out_8962114299087111796[59] = 1;
   out_8962114299087111796[60] = 0;
   out_8962114299087111796[61] = 0;
   out_8962114299087111796[62] = 0;
   out_8962114299087111796[63] = 0;
   out_8962114299087111796[64] = 0;
   out_8962114299087111796[65] = 0;
}
void h_9(double *state, double *unused, double *out_2255850241051147115) {
   out_2255850241051147115[0] = state[10];
   out_2255850241051147115[1] = state[11];
   out_2255850241051147115[2] = state[12];
}
void H_9(double *state, double *unused, double *out_9203303945716702441) {
   out_9203303945716702441[0] = 0;
   out_9203303945716702441[1] = 0;
   out_9203303945716702441[2] = 0;
   out_9203303945716702441[3] = 0;
   out_9203303945716702441[4] = 0;
   out_9203303945716702441[5] = 0;
   out_9203303945716702441[6] = 0;
   out_9203303945716702441[7] = 0;
   out_9203303945716702441[8] = 0;
   out_9203303945716702441[9] = 0;
   out_9203303945716702441[10] = 1;
   out_9203303945716702441[11] = 0;
   out_9203303945716702441[12] = 0;
   out_9203303945716702441[13] = 0;
   out_9203303945716702441[14] = 0;
   out_9203303945716702441[15] = 0;
   out_9203303945716702441[16] = 0;
   out_9203303945716702441[17] = 0;
   out_9203303945716702441[18] = 0;
   out_9203303945716702441[19] = 0;
   out_9203303945716702441[20] = 0;
   out_9203303945716702441[21] = 0;
   out_9203303945716702441[22] = 0;
   out_9203303945716702441[23] = 0;
   out_9203303945716702441[24] = 0;
   out_9203303945716702441[25] = 0;
   out_9203303945716702441[26] = 0;
   out_9203303945716702441[27] = 0;
   out_9203303945716702441[28] = 0;
   out_9203303945716702441[29] = 0;
   out_9203303945716702441[30] = 0;
   out_9203303945716702441[31] = 0;
   out_9203303945716702441[32] = 0;
   out_9203303945716702441[33] = 1;
   out_9203303945716702441[34] = 0;
   out_9203303945716702441[35] = 0;
   out_9203303945716702441[36] = 0;
   out_9203303945716702441[37] = 0;
   out_9203303945716702441[38] = 0;
   out_9203303945716702441[39] = 0;
   out_9203303945716702441[40] = 0;
   out_9203303945716702441[41] = 0;
   out_9203303945716702441[42] = 0;
   out_9203303945716702441[43] = 0;
   out_9203303945716702441[44] = 0;
   out_9203303945716702441[45] = 0;
   out_9203303945716702441[46] = 0;
   out_9203303945716702441[47] = 0;
   out_9203303945716702441[48] = 0;
   out_9203303945716702441[49] = 0;
   out_9203303945716702441[50] = 0;
   out_9203303945716702441[51] = 0;
   out_9203303945716702441[52] = 0;
   out_9203303945716702441[53] = 0;
   out_9203303945716702441[54] = 0;
   out_9203303945716702441[55] = 0;
   out_9203303945716702441[56] = 1;
   out_9203303945716702441[57] = 0;
   out_9203303945716702441[58] = 0;
   out_9203303945716702441[59] = 0;
   out_9203303945716702441[60] = 0;
   out_9203303945716702441[61] = 0;
   out_9203303945716702441[62] = 0;
   out_9203303945716702441[63] = 0;
   out_9203303945716702441[64] = 0;
   out_9203303945716702441[65] = 0;
}
void h_10(double *state, double *unused, double *out_3292043746715240724) {
   out_3292043746715240724[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3292043746715240724[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3292043746715240724[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_846922134723447269) {
   out_846922134723447269[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_846922134723447269[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_846922134723447269[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_846922134723447269[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_846922134723447269[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_846922134723447269[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_846922134723447269[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_846922134723447269[7] = 0;
   out_846922134723447269[8] = 0;
   out_846922134723447269[9] = 0;
   out_846922134723447269[10] = 0;
   out_846922134723447269[11] = 0;
   out_846922134723447269[12] = 0;
   out_846922134723447269[13] = 0;
   out_846922134723447269[14] = 0;
   out_846922134723447269[15] = 0;
   out_846922134723447269[16] = 1;
   out_846922134723447269[17] = 0;
   out_846922134723447269[18] = 0;
   out_846922134723447269[19] = 1;
   out_846922134723447269[20] = 0;
   out_846922134723447269[21] = 0;
   out_846922134723447269[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_846922134723447269[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_846922134723447269[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_846922134723447269[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_846922134723447269[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_846922134723447269[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_846922134723447269[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_846922134723447269[29] = 0;
   out_846922134723447269[30] = 0;
   out_846922134723447269[31] = 0;
   out_846922134723447269[32] = 0;
   out_846922134723447269[33] = 0;
   out_846922134723447269[34] = 0;
   out_846922134723447269[35] = 0;
   out_846922134723447269[36] = 0;
   out_846922134723447269[37] = 0;
   out_846922134723447269[38] = 0;
   out_846922134723447269[39] = 1;
   out_846922134723447269[40] = 0;
   out_846922134723447269[41] = 0;
   out_846922134723447269[42] = 1;
   out_846922134723447269[43] = 0;
   out_846922134723447269[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_846922134723447269[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_846922134723447269[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_846922134723447269[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_846922134723447269[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_846922134723447269[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_846922134723447269[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_846922134723447269[51] = 0;
   out_846922134723447269[52] = 0;
   out_846922134723447269[53] = 0;
   out_846922134723447269[54] = 0;
   out_846922134723447269[55] = 0;
   out_846922134723447269[56] = 0;
   out_846922134723447269[57] = 0;
   out_846922134723447269[58] = 0;
   out_846922134723447269[59] = 0;
   out_846922134723447269[60] = 0;
   out_846922134723447269[61] = 0;
   out_846922134723447269[62] = 1;
   out_846922134723447269[63] = 0;
   out_846922134723447269[64] = 0;
   out_846922134723447269[65] = 1;
}
void h_12(double *state, double *unused, double *out_7159004250134852029) {
   out_7159004250134852029[0] = state[0];
   out_7159004250134852029[1] = state[1];
   out_7159004250134852029[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4465173366590478025) {
   out_4465173366590478025[0] = 1;
   out_4465173366590478025[1] = 0;
   out_4465173366590478025[2] = 0;
   out_4465173366590478025[3] = 0;
   out_4465173366590478025[4] = 0;
   out_4465173366590478025[5] = 0;
   out_4465173366590478025[6] = 0;
   out_4465173366590478025[7] = 0;
   out_4465173366590478025[8] = 0;
   out_4465173366590478025[9] = 0;
   out_4465173366590478025[10] = 0;
   out_4465173366590478025[11] = 0;
   out_4465173366590478025[12] = 0;
   out_4465173366590478025[13] = 0;
   out_4465173366590478025[14] = 0;
   out_4465173366590478025[15] = 0;
   out_4465173366590478025[16] = 0;
   out_4465173366590478025[17] = 0;
   out_4465173366590478025[18] = 0;
   out_4465173366590478025[19] = 0;
   out_4465173366590478025[20] = 0;
   out_4465173366590478025[21] = 0;
   out_4465173366590478025[22] = 0;
   out_4465173366590478025[23] = 1;
   out_4465173366590478025[24] = 0;
   out_4465173366590478025[25] = 0;
   out_4465173366590478025[26] = 0;
   out_4465173366590478025[27] = 0;
   out_4465173366590478025[28] = 0;
   out_4465173366590478025[29] = 0;
   out_4465173366590478025[30] = 0;
   out_4465173366590478025[31] = 0;
   out_4465173366590478025[32] = 0;
   out_4465173366590478025[33] = 0;
   out_4465173366590478025[34] = 0;
   out_4465173366590478025[35] = 0;
   out_4465173366590478025[36] = 0;
   out_4465173366590478025[37] = 0;
   out_4465173366590478025[38] = 0;
   out_4465173366590478025[39] = 0;
   out_4465173366590478025[40] = 0;
   out_4465173366590478025[41] = 0;
   out_4465173366590478025[42] = 0;
   out_4465173366590478025[43] = 0;
   out_4465173366590478025[44] = 0;
   out_4465173366590478025[45] = 0;
   out_4465173366590478025[46] = 1;
   out_4465173366590478025[47] = 0;
   out_4465173366590478025[48] = 0;
   out_4465173366590478025[49] = 0;
   out_4465173366590478025[50] = 0;
   out_4465173366590478025[51] = 0;
   out_4465173366590478025[52] = 0;
   out_4465173366590478025[53] = 0;
   out_4465173366590478025[54] = 0;
   out_4465173366590478025[55] = 0;
   out_4465173366590478025[56] = 0;
   out_4465173366590478025[57] = 0;
   out_4465173366590478025[58] = 0;
   out_4465173366590478025[59] = 0;
   out_4465173366590478025[60] = 0;
   out_4465173366590478025[61] = 0;
   out_4465173366590478025[62] = 0;
   out_4465173366590478025[63] = 0;
   out_4465173366590478025[64] = 0;
   out_4465173366590478025[65] = 0;
}
void h_35(double *state, double *unused, double *out_2632128346535043517) {
   out_2632128346535043517[0] = state[7];
   out_2632128346535043517[1] = state[8];
   out_2632128346535043517[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6117967717249832444) {
   out_6117967717249832444[0] = 0;
   out_6117967717249832444[1] = 0;
   out_6117967717249832444[2] = 0;
   out_6117967717249832444[3] = 0;
   out_6117967717249832444[4] = 0;
   out_6117967717249832444[5] = 0;
   out_6117967717249832444[6] = 0;
   out_6117967717249832444[7] = 1;
   out_6117967717249832444[8] = 0;
   out_6117967717249832444[9] = 0;
   out_6117967717249832444[10] = 0;
   out_6117967717249832444[11] = 0;
   out_6117967717249832444[12] = 0;
   out_6117967717249832444[13] = 0;
   out_6117967717249832444[14] = 0;
   out_6117967717249832444[15] = 0;
   out_6117967717249832444[16] = 0;
   out_6117967717249832444[17] = 0;
   out_6117967717249832444[18] = 0;
   out_6117967717249832444[19] = 0;
   out_6117967717249832444[20] = 0;
   out_6117967717249832444[21] = 0;
   out_6117967717249832444[22] = 0;
   out_6117967717249832444[23] = 0;
   out_6117967717249832444[24] = 0;
   out_6117967717249832444[25] = 0;
   out_6117967717249832444[26] = 0;
   out_6117967717249832444[27] = 0;
   out_6117967717249832444[28] = 0;
   out_6117967717249832444[29] = 0;
   out_6117967717249832444[30] = 1;
   out_6117967717249832444[31] = 0;
   out_6117967717249832444[32] = 0;
   out_6117967717249832444[33] = 0;
   out_6117967717249832444[34] = 0;
   out_6117967717249832444[35] = 0;
   out_6117967717249832444[36] = 0;
   out_6117967717249832444[37] = 0;
   out_6117967717249832444[38] = 0;
   out_6117967717249832444[39] = 0;
   out_6117967717249832444[40] = 0;
   out_6117967717249832444[41] = 0;
   out_6117967717249832444[42] = 0;
   out_6117967717249832444[43] = 0;
   out_6117967717249832444[44] = 0;
   out_6117967717249832444[45] = 0;
   out_6117967717249832444[46] = 0;
   out_6117967717249832444[47] = 0;
   out_6117967717249832444[48] = 0;
   out_6117967717249832444[49] = 0;
   out_6117967717249832444[50] = 0;
   out_6117967717249832444[51] = 0;
   out_6117967717249832444[52] = 0;
   out_6117967717249832444[53] = 1;
   out_6117967717249832444[54] = 0;
   out_6117967717249832444[55] = 0;
   out_6117967717249832444[56] = 0;
   out_6117967717249832444[57] = 0;
   out_6117967717249832444[58] = 0;
   out_6117967717249832444[59] = 0;
   out_6117967717249832444[60] = 0;
   out_6117967717249832444[61] = 0;
   out_6117967717249832444[62] = 0;
   out_6117967717249832444[63] = 0;
   out_6117967717249832444[64] = 0;
   out_6117967717249832444[65] = 0;
}
void h_32(double *state, double *unused, double *out_2865592043788577394) {
   out_2865592043788577394[0] = state[3];
   out_2865592043788577394[1] = state[4];
   out_2865592043788577394[2] = state[5];
   out_2865592043788577394[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5986802932309091975) {
   out_5986802932309091975[0] = 0;
   out_5986802932309091975[1] = 0;
   out_5986802932309091975[2] = 0;
   out_5986802932309091975[3] = 1;
   out_5986802932309091975[4] = 0;
   out_5986802932309091975[5] = 0;
   out_5986802932309091975[6] = 0;
   out_5986802932309091975[7] = 0;
   out_5986802932309091975[8] = 0;
   out_5986802932309091975[9] = 0;
   out_5986802932309091975[10] = 0;
   out_5986802932309091975[11] = 0;
   out_5986802932309091975[12] = 0;
   out_5986802932309091975[13] = 0;
   out_5986802932309091975[14] = 0;
   out_5986802932309091975[15] = 0;
   out_5986802932309091975[16] = 0;
   out_5986802932309091975[17] = 0;
   out_5986802932309091975[18] = 0;
   out_5986802932309091975[19] = 0;
   out_5986802932309091975[20] = 0;
   out_5986802932309091975[21] = 0;
   out_5986802932309091975[22] = 0;
   out_5986802932309091975[23] = 0;
   out_5986802932309091975[24] = 0;
   out_5986802932309091975[25] = 0;
   out_5986802932309091975[26] = 1;
   out_5986802932309091975[27] = 0;
   out_5986802932309091975[28] = 0;
   out_5986802932309091975[29] = 0;
   out_5986802932309091975[30] = 0;
   out_5986802932309091975[31] = 0;
   out_5986802932309091975[32] = 0;
   out_5986802932309091975[33] = 0;
   out_5986802932309091975[34] = 0;
   out_5986802932309091975[35] = 0;
   out_5986802932309091975[36] = 0;
   out_5986802932309091975[37] = 0;
   out_5986802932309091975[38] = 0;
   out_5986802932309091975[39] = 0;
   out_5986802932309091975[40] = 0;
   out_5986802932309091975[41] = 0;
   out_5986802932309091975[42] = 0;
   out_5986802932309091975[43] = 0;
   out_5986802932309091975[44] = 0;
   out_5986802932309091975[45] = 0;
   out_5986802932309091975[46] = 0;
   out_5986802932309091975[47] = 0;
   out_5986802932309091975[48] = 0;
   out_5986802932309091975[49] = 1;
   out_5986802932309091975[50] = 0;
   out_5986802932309091975[51] = 0;
   out_5986802932309091975[52] = 0;
   out_5986802932309091975[53] = 0;
   out_5986802932309091975[54] = 0;
   out_5986802932309091975[55] = 0;
   out_5986802932309091975[56] = 0;
   out_5986802932309091975[57] = 0;
   out_5986802932309091975[58] = 0;
   out_5986802932309091975[59] = 0;
   out_5986802932309091975[60] = 0;
   out_5986802932309091975[61] = 0;
   out_5986802932309091975[62] = 0;
   out_5986802932309091975[63] = 0;
   out_5986802932309091975[64] = 0;
   out_5986802932309091975[65] = 0;
   out_5986802932309091975[66] = 0;
   out_5986802932309091975[67] = 0;
   out_5986802932309091975[68] = 0;
   out_5986802932309091975[69] = 0;
   out_5986802932309091975[70] = 0;
   out_5986802932309091975[71] = 0;
   out_5986802932309091975[72] = 1;
   out_5986802932309091975[73] = 0;
   out_5986802932309091975[74] = 0;
   out_5986802932309091975[75] = 0;
   out_5986802932309091975[76] = 0;
   out_5986802932309091975[77] = 0;
   out_5986802932309091975[78] = 0;
   out_5986802932309091975[79] = 0;
   out_5986802932309091975[80] = 0;
   out_5986802932309091975[81] = 0;
   out_5986802932309091975[82] = 0;
   out_5986802932309091975[83] = 0;
   out_5986802932309091975[84] = 0;
   out_5986802932309091975[85] = 0;
   out_5986802932309091975[86] = 0;
   out_5986802932309091975[87] = 0;
}
void h_13(double *state, double *unused, double *out_700089127386922507) {
   out_700089127386922507[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_700089127386922507[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_700089127386922507[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_935496178521268066) {
   out_935496178521268066[0] = 0;
   out_935496178521268066[1] = 0;
   out_935496178521268066[2] = 0;
   out_935496178521268066[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_935496178521268066[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_935496178521268066[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_935496178521268066[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_935496178521268066[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_935496178521268066[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_935496178521268066[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_935496178521268066[10] = 0;
   out_935496178521268066[11] = 0;
   out_935496178521268066[12] = 0;
   out_935496178521268066[13] = 0;
   out_935496178521268066[14] = 0;
   out_935496178521268066[15] = 0;
   out_935496178521268066[16] = 0;
   out_935496178521268066[17] = 0;
   out_935496178521268066[18] = 0;
   out_935496178521268066[19] = 0;
   out_935496178521268066[20] = 0;
   out_935496178521268066[21] = 0;
   out_935496178521268066[22] = 0;
   out_935496178521268066[23] = 0;
   out_935496178521268066[24] = 0;
   out_935496178521268066[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_935496178521268066[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_935496178521268066[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_935496178521268066[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_935496178521268066[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_935496178521268066[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_935496178521268066[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_935496178521268066[32] = 0;
   out_935496178521268066[33] = 0;
   out_935496178521268066[34] = 0;
   out_935496178521268066[35] = 0;
   out_935496178521268066[36] = 0;
   out_935496178521268066[37] = 0;
   out_935496178521268066[38] = 0;
   out_935496178521268066[39] = 0;
   out_935496178521268066[40] = 0;
   out_935496178521268066[41] = 0;
   out_935496178521268066[42] = 0;
   out_935496178521268066[43] = 0;
   out_935496178521268066[44] = 0;
   out_935496178521268066[45] = 0;
   out_935496178521268066[46] = 0;
   out_935496178521268066[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_935496178521268066[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_935496178521268066[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_935496178521268066[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_935496178521268066[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_935496178521268066[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_935496178521268066[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_935496178521268066[54] = 0;
   out_935496178521268066[55] = 0;
   out_935496178521268066[56] = 0;
   out_935496178521268066[57] = 0;
   out_935496178521268066[58] = 0;
   out_935496178521268066[59] = 0;
   out_935496178521268066[60] = 0;
   out_935496178521268066[61] = 0;
   out_935496178521268066[62] = 0;
   out_935496178521268066[63] = 0;
   out_935496178521268066[64] = 0;
   out_935496178521268066[65] = 0;
}
void h_14(double *state, double *unused, double *out_2255850241051147115) {
   out_2255850241051147115[0] = state[10];
   out_2255850241051147115[1] = state[11];
   out_2255850241051147115[2] = state[12];
}
void H_14(double *state, double *unused, double *out_9203303945716702441) {
   out_9203303945716702441[0] = 0;
   out_9203303945716702441[1] = 0;
   out_9203303945716702441[2] = 0;
   out_9203303945716702441[3] = 0;
   out_9203303945716702441[4] = 0;
   out_9203303945716702441[5] = 0;
   out_9203303945716702441[6] = 0;
   out_9203303945716702441[7] = 0;
   out_9203303945716702441[8] = 0;
   out_9203303945716702441[9] = 0;
   out_9203303945716702441[10] = 1;
   out_9203303945716702441[11] = 0;
   out_9203303945716702441[12] = 0;
   out_9203303945716702441[13] = 0;
   out_9203303945716702441[14] = 0;
   out_9203303945716702441[15] = 0;
   out_9203303945716702441[16] = 0;
   out_9203303945716702441[17] = 0;
   out_9203303945716702441[18] = 0;
   out_9203303945716702441[19] = 0;
   out_9203303945716702441[20] = 0;
   out_9203303945716702441[21] = 0;
   out_9203303945716702441[22] = 0;
   out_9203303945716702441[23] = 0;
   out_9203303945716702441[24] = 0;
   out_9203303945716702441[25] = 0;
   out_9203303945716702441[26] = 0;
   out_9203303945716702441[27] = 0;
   out_9203303945716702441[28] = 0;
   out_9203303945716702441[29] = 0;
   out_9203303945716702441[30] = 0;
   out_9203303945716702441[31] = 0;
   out_9203303945716702441[32] = 0;
   out_9203303945716702441[33] = 1;
   out_9203303945716702441[34] = 0;
   out_9203303945716702441[35] = 0;
   out_9203303945716702441[36] = 0;
   out_9203303945716702441[37] = 0;
   out_9203303945716702441[38] = 0;
   out_9203303945716702441[39] = 0;
   out_9203303945716702441[40] = 0;
   out_9203303945716702441[41] = 0;
   out_9203303945716702441[42] = 0;
   out_9203303945716702441[43] = 0;
   out_9203303945716702441[44] = 0;
   out_9203303945716702441[45] = 0;
   out_9203303945716702441[46] = 0;
   out_9203303945716702441[47] = 0;
   out_9203303945716702441[48] = 0;
   out_9203303945716702441[49] = 0;
   out_9203303945716702441[50] = 0;
   out_9203303945716702441[51] = 0;
   out_9203303945716702441[52] = 0;
   out_9203303945716702441[53] = 0;
   out_9203303945716702441[54] = 0;
   out_9203303945716702441[55] = 0;
   out_9203303945716702441[56] = 1;
   out_9203303945716702441[57] = 0;
   out_9203303945716702441[58] = 0;
   out_9203303945716702441[59] = 0;
   out_9203303945716702441[60] = 0;
   out_9203303945716702441[61] = 0;
   out_9203303945716702441[62] = 0;
   out_9203303945716702441[63] = 0;
   out_9203303945716702441[64] = 0;
   out_9203303945716702441[65] = 0;
}
void h_33(double *state, double *unused, double *out_3195207143915802552) {
   out_3195207143915802552[0] = state[16];
   out_3195207143915802552[1] = state[17];
   out_3195207143915802552[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2967410712610974840) {
   out_2967410712610974840[0] = 0;
   out_2967410712610974840[1] = 0;
   out_2967410712610974840[2] = 0;
   out_2967410712610974840[3] = 0;
   out_2967410712610974840[4] = 0;
   out_2967410712610974840[5] = 0;
   out_2967410712610974840[6] = 0;
   out_2967410712610974840[7] = 0;
   out_2967410712610974840[8] = 0;
   out_2967410712610974840[9] = 0;
   out_2967410712610974840[10] = 0;
   out_2967410712610974840[11] = 0;
   out_2967410712610974840[12] = 0;
   out_2967410712610974840[13] = 0;
   out_2967410712610974840[14] = 0;
   out_2967410712610974840[15] = 0;
   out_2967410712610974840[16] = 1;
   out_2967410712610974840[17] = 0;
   out_2967410712610974840[18] = 0;
   out_2967410712610974840[19] = 0;
   out_2967410712610974840[20] = 0;
   out_2967410712610974840[21] = 0;
   out_2967410712610974840[22] = 0;
   out_2967410712610974840[23] = 0;
   out_2967410712610974840[24] = 0;
   out_2967410712610974840[25] = 0;
   out_2967410712610974840[26] = 0;
   out_2967410712610974840[27] = 0;
   out_2967410712610974840[28] = 0;
   out_2967410712610974840[29] = 0;
   out_2967410712610974840[30] = 0;
   out_2967410712610974840[31] = 0;
   out_2967410712610974840[32] = 0;
   out_2967410712610974840[33] = 0;
   out_2967410712610974840[34] = 0;
   out_2967410712610974840[35] = 0;
   out_2967410712610974840[36] = 0;
   out_2967410712610974840[37] = 0;
   out_2967410712610974840[38] = 0;
   out_2967410712610974840[39] = 1;
   out_2967410712610974840[40] = 0;
   out_2967410712610974840[41] = 0;
   out_2967410712610974840[42] = 0;
   out_2967410712610974840[43] = 0;
   out_2967410712610974840[44] = 0;
   out_2967410712610974840[45] = 0;
   out_2967410712610974840[46] = 0;
   out_2967410712610974840[47] = 0;
   out_2967410712610974840[48] = 0;
   out_2967410712610974840[49] = 0;
   out_2967410712610974840[50] = 0;
   out_2967410712610974840[51] = 0;
   out_2967410712610974840[52] = 0;
   out_2967410712610974840[53] = 0;
   out_2967410712610974840[54] = 0;
   out_2967410712610974840[55] = 0;
   out_2967410712610974840[56] = 0;
   out_2967410712610974840[57] = 0;
   out_2967410712610974840[58] = 0;
   out_2967410712610974840[59] = 0;
   out_2967410712610974840[60] = 0;
   out_2967410712610974840[61] = 0;
   out_2967410712610974840[62] = 1;
   out_2967410712610974840[63] = 0;
   out_2967410712610974840[64] = 0;
   out_2967410712610974840[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3650258586047302313) {
  H(in_vec, out_3650258586047302313);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_319164860628708381) {
  err_fun(nom_x, delta_x, out_319164860628708381);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_61279048776004062) {
  inv_err_fun(nom_x, true_x, out_61279048776004062);
}
void live_H_mod_fun(double *state, double *out_8884535280500598173) {
  H_mod_fun(state, out_8884535280500598173);
}
void live_f_fun(double *state, double dt, double *out_1529620457729649381) {
  f_fun(state,  dt, out_1529620457729649381);
}
void live_F_fun(double *state, double dt, double *out_1152118045946151049) {
  F_fun(state,  dt, out_1152118045946151049);
}
void live_h_4(double *state, double *unused, double *out_1481217230938872647) {
  h_4(state, unused, out_1481217230938872647);
}
void live_H_4(double *state, double *unused, double *out_8962114299087111796) {
  H_4(state, unused, out_8962114299087111796);
}
void live_h_9(double *state, double *unused, double *out_2255850241051147115) {
  h_9(state, unused, out_2255850241051147115);
}
void live_H_9(double *state, double *unused, double *out_9203303945716702441) {
  H_9(state, unused, out_9203303945716702441);
}
void live_h_10(double *state, double *unused, double *out_3292043746715240724) {
  h_10(state, unused, out_3292043746715240724);
}
void live_H_10(double *state, double *unused, double *out_846922134723447269) {
  H_10(state, unused, out_846922134723447269);
}
void live_h_12(double *state, double *unused, double *out_7159004250134852029) {
  h_12(state, unused, out_7159004250134852029);
}
void live_H_12(double *state, double *unused, double *out_4465173366590478025) {
  H_12(state, unused, out_4465173366590478025);
}
void live_h_35(double *state, double *unused, double *out_2632128346535043517) {
  h_35(state, unused, out_2632128346535043517);
}
void live_H_35(double *state, double *unused, double *out_6117967717249832444) {
  H_35(state, unused, out_6117967717249832444);
}
void live_h_32(double *state, double *unused, double *out_2865592043788577394) {
  h_32(state, unused, out_2865592043788577394);
}
void live_H_32(double *state, double *unused, double *out_5986802932309091975) {
  H_32(state, unused, out_5986802932309091975);
}
void live_h_13(double *state, double *unused, double *out_700089127386922507) {
  h_13(state, unused, out_700089127386922507);
}
void live_H_13(double *state, double *unused, double *out_935496178521268066) {
  H_13(state, unused, out_935496178521268066);
}
void live_h_14(double *state, double *unused, double *out_2255850241051147115) {
  h_14(state, unused, out_2255850241051147115);
}
void live_H_14(double *state, double *unused, double *out_9203303945716702441) {
  H_14(state, unused, out_9203303945716702441);
}
void live_h_33(double *state, double *unused, double *out_3195207143915802552) {
  h_33(state, unused, out_3195207143915802552);
}
void live_H_33(double *state, double *unused, double *out_2967410712610974840) {
  H_33(state, unused, out_2967410712610974840);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
